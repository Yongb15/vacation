 2023.07.21 자바 강의내용

 연산자

 항과 연산자
	- 항 : 연산에 사용되는 값
	- 연산자 : 연산에 사용되는 기호

	ex)
		- 20, 10 -> 항
		- '+ : 연산자
	
	단항 : 연산에 사용된 항이 한 개
	이항 : 연산에 사용된 항이 두 개
	삼항 : 연산에 사용된 항이 세 개

 대입 연산자
	ex)
		int num1 = 10;
		- 오른쪽에 있는 값을 왼쪽 변수에 저장

	int num2 = num1 + 100;
	- num1 + 100 -> num2 대입
	- 연산의 순서가 가장 마지막에 발생
	- 연산의 우선 순위가 가장 낮다.  

 부호 연산자 
	- 음수, 양수
	- '+', '-'
	- '-' : 부호 반전 : 양수 -> 음수, 음수 -> 양수

 산술 연산자
	- '+' : 더하기
	- '-' : 빼기
	- '*' : 곱하기
	- '/' : 나누기
	- '%' : 나머지
		- 균등 배분
			나누는 수 미만의 나머지가 순서대로 반복된다.
			ex) 3으로 나눈 나머지 -> 1, 2, 0 1, 2, 0 ...
		- 홀수, 짝수
			홀수 : 1, 3, 5, 7, 9 ... / 2로 나누었을 때 나머지가 1일 경우
			짝수 : 2, 4, 6, 8 ... / 2로 나누었을 때 나머지가 없는 경우
			
		*, /, % > +, - : 우선순위

		( . . ) : 연산자 우선순위 강제 적용

	- 숫자 +연산자 : 수치를 더하기
	- 문자열 + 연산자 : 문자를 결합
	- 문자열 + 문자열
	- 문자열 + 숫자 | 논리값

 증가감소 연산자
	- 단항 연산 : 1씩 증가 : 1씩 감소
	- 1씩 증가 : '++'
		ex)
			num1++; == num1 = num1 + 1;		// 대입 후 연산
			++num1; == num1 = num1 + 1;		// 연산 후 대입
	- 1씩 감소 : '--'
		ex)
			num1--; == num1 = num1 - 1;		// 대입 후 연산
			--num1 == num1 = num1 - 1;		// 연산 후 대입

 관계 연산자(비교 연산자)
 	- '>', '<', >=, <=
	- '==' : 같다
	- '!=' : 다르다
	
	- = : 대입 연산자 : 판별
		- 연산의 결과 : 논리값 (true, false)
		- 자료형 : boolean

 논리 연산자
	- AND : 교집합
		- 모두 참이여야만 참이되는 조건
		- '&&' == AND 연산자			// 값이 정해져있는 상태로 연산해야 함.
		ex)
			true && true -> true
			false && true -> false
			false && true -> false
		
	- OR   : 합집합
		- 하나만 참이어도 참이되는 조건
		= '||' == OR 연산자
		ex)
			false || true -> true
			true || false -> true
			false || false -> false

	- NOT  : 부정 연산
		- ! : 참 -> 거짓, 거짓 -> 참 

	- 연산의 결과 : 논리값(true, false) -> 판별(조건식 ..)

	- 비교 연산자 여러개를 함께 판별할 때 사용
	- 비교 연산자의 우선 순위가 논리 연산자보다 높다.
		(비교 연산자 > 논리 연산자)
 
 단락회로 평가
	- 논리 연산에서 이미 결과가 결정된 경우, 연산을 종료

 복합 대입 연산자
	- 대입(=)  + 다른 연산자(산술 연산자('+', '-', '*', '/', '%')를 가장 많이 사용)
	ex) 2씩 곱하기
		num = num * 2;	==   num *= 2;

 조건 연산자 (삼항 조건 연산자)
	- (조건식 : 1항) ? (참일 때 수행 : 2항) : (거짓일 때 수행 : 3항)
		- 참, 거짓을 판별하는 연산식 - true, false ex) 비교 연산자, 논리 연산자

 연산자 우선순위
	- 대입 연산자('=') <  ... 논리 연산자 ('&&', '||', ...) < ... 비교 연산자('AND', 'OR', 'NOT') < ... 단항 연산자 < ( .. )

 조건문
	- 참일 때 실행되는 코드와 참이 아닌 조건에서 실행되는 코드를 분리하는 구문(조건식)
 if문과  else문
	- if문 (조건식) {
		// 조건식이 참일 때  실행되는 코드
	}
	ex)
		- 조건식 : 참, 거짓을 판별하는 연산식
			(true, false)

	- else문 (조건식) {
		// 조건식이 거짓일 때 실행되는 코드
	}
	
	- if-else문
		if (조건식1) {
			// 조건식1이 참일 때 실행 코드
	}
		else if (조건식 2) {
			// 조건식1이 거짓이고, 조건식2가 참일 때 실행 코드
		}
		
		else if (조건식 3) {
			// 조건식1,  조건식2가 모두 거짓, 조건식3이 참
		}

		...

		else {
			// 모든 조건이 거짓일 때 실행되는 코드
		}
	

 삼항 조건 연산자
	-



























		 		